; Nintendo Super Punchout data file for z80dasm
; Super Punch-Out!! (Rev B) ROMs used by MAME (labeled as spnchout)
; please send additions/changes to Franklin <at> FranklinBowen <dot> net
; look for newest files at http://www.FranklinBowen.net

; date 2023-12-24

; o Remarks - these are lines beginning with a semi-colon (;) they are completely ignored.
; o 1 ORG line - gives the origin of the code; this is the startingaddress to be used for the disassembly.
; o COMMENT lines - used to add comments to the end of lines of the disassembly.
; o COMMENTLINE lines - provide full-line comments to be included before a given address in the disassembly.
; o DATA lines - mark sections as data.  These sections will not be disassembled, but dumped as hex data instead.
; o ASCII lines - mark sections as text.  These sections will not be disassembled, but printed as text instead.
;
; current limitations:
; o number of LABEL, DATA/ASCII, COMMENT and COMMENTLINE lines determined at compile-time - see MAXLABEL, MAXDATA, MAXCOMMENT and MAXCOMMLINE
; o all DATA/ASCII lines in data file must be sorted in ascending address order
; o ditto for COMMENT and COMMENTLINE lines
; o if a DATA/ASCII area is preceded by what Z80dasm thinks is code that continues into the DATA/ASCII area, the data will not be marked
;   as such, and an error will be printed.  If this is the case, mark the line before the data as data also.

; Input
; =====
; Port/Bit 8   7    6   5   4   3   2   1
; 0000     x   Duck x   x   KO  R   x   L
; tron below
; 0000     Service Switch   x   Tilt  1B  2P  1P  COIN 2/R  COIN 1/L
; 0001     x	            1 Spinner
; 0002     2D	            2U  2R    2L  1D  1U  1R        1L
; 0003     2B               x   x     x   x   x   x         x
; 0004     x                2 Spinner

IO_LABEL 00 IO_0_BUTTONS

org 0000

commentline 0000 Dissasembly of the Super Punch-Out!! (Rev B) ROMs used by MAME (labeled as spnchout)
comment 0000 Z80 starts executing code at 0x0000

comment 0b93 return from NMI

commentline 108D a is bcd digits. put a into 10s digit and 1s digit on screen
commentline 1679 process rematch (because credit and R punch pressed)
commentline 1689 input from 00 into A, check bit 3 (and $04) and if NZ, jmp 1676

comment 169A ?
comment 169C ?
comment 169E ?
comment 16A0 ?
comment 16A2 ?
comment 16A4 ?
comment 16A6 ?
comment 16A8 ?

commentline 2d75 a= bcd? input, a&c are output: a has tens digit in lower nybble and c has ones digit in lower nybbble
commentline 3055 print from 46f0 & 46d4 (what?)
commentline 3060 print remtach?

commentline 4598 ?
commentline 46B3 ?
commentline 46D4 ?
commentline 46F0 ?
commentline 471A data for outputting rematch with arrow above right punch button
commentline 4720 HCTAMER
commentline 472A ?
commentline 4823 ?

commentline d7bf 01 = credit, 02 = start game, 03 = game over, 04 = game over 2?, 05 = game over 3?, 06 = rematch started,
commentline d7bf or countdown value to add coins for rematch
commentline d880 top screen background RAM, from top left corner to bottom right corner
commentline d880 ~D880-DF7F, 32x32, 00-09: digits, 0A-23: letters, 24-?: special chars
commentline d880 char then color palette (44 is white char on black background)

commentline f20E bottom screen background RAM, from top left corner to bottom right corner
commentline f20E ~F20E-FECF, 32x26?, 
commentline f20E char then color palette (44 is white char on black background)

label 0b3c NMI_starts_here?
label 168f print_rematch?

label d022 ENERGY
label d024 CPU_ENERGY
label d02e KOS
label d02f CPU_KOS ; if 3, enemy will be knocked out with next knockdown
label d048 KO_LEVEL ; 1A = max/can KO
label d7bf game_status
label d7cb credits
label d7f2 TIME
label d880 VRAM_top_monitor
label dff4 vert_scroll_sprite_1?

; fill f1ae,d22,0620 (fills bottom screen with green Ws)
label f20e VRAM_bottom_monitor
label fcc8 REMATCH_AVAILABLE_DRAW_LOCATION

; Is there security software? 3AB1 was reading areas I didn't expect. Also, I found when I enabled cheats,
; I sometimes had to knockdown an opponent far more than 3 times! Why?
